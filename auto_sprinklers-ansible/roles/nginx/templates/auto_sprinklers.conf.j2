server {
    listen 80 default_server;
    server_name {{ server_hostname }};

    location /.well-known/ {
        root {{ web_root }}/;
        auth_basic off;
    }

    location / {
        return 301 https://$host$request_uri;
    }

}

server {
    listen              443 ssl;
    server_name {{ server_hostname }};

    ssl_certificate     /etc/nginx/ssl/{{ server_hostname }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ server_hostname }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    auth_basic           "Auth required";
    auth_basic_user_file {{ web_auth_file }};
    
#    # OAuth2 Proxy endpoints
#    location /oauth2/ {
#        proxy_pass       http://127.0.0.1:4180;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Scheme $scheme;
#        proxy_set_header X-Auth-Request-Redirect $request_uri;
#        auth_request off;
#    }

    # Protect all other locations with oauth2-proxy
    location / {
        include proxy_params;
        proxy_pass http://unix:/var/www/html/auto_sprinklers/home.sock;
    }
#    location / {
#        auth_request /oauth2/auth;
#        error_page 401 = @error401;
#        include proxy_params;
#        proxy_pass http://127.0.0.1:8000;
#    }

#    location = /oauth2/auth {
#        proxy_pass       http://127.0.0.1:4180/oauth2/auth;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Scheme $scheme;
#        proxy_set_header X-Auth-Request-Redirect $request_uri;
#    }

#    location @error401 {
#        return 302 /oauth2/start?rd=$scheme://$host$request_uri;
#    }

#    location /static/ {
#        root {{ web_root }}/auto_sprinklers/sprinklers/;
#        auth_request off;
#    }
    location /.well-known/ {
         root {{ web_root }}/;
        auth_request off;
    }
    location = /favicon.ico { access_log off; log_not_found off; auth_request off; }
}